//---------------------------------------------------------------------------
//    $Id$
//    Version: $Name$
//
//    Copyright (C) 2010, 2011, 2012 by the deal.II authors
//
//    This file is subject to QPL and may not be  distributed
//    without copyright and license information. Please refer
//    to the file deal.II/doc/license.html for the  text  and
//    further information on this license.
//
//---------------------------------------------------------------------------

for (deal_II_dimension : DIMENSIONS ; deal_II_space_dimension : SPACE_DIMENSIONS)
{
#if deal_II_dimension != 1 && deal_II_dimension <= deal_II_space_dimension
template class KellyErrorEstimator<deal_II_dimension, deal_II_space_dimension>;
#endif
}

for (VEC : SERIAL_VECTORS ; deal_II_dimension : DIMENSIONS; deal_II_space_dimension : SPACE_DIMENSIONS; DH : DOFHANDLER_TEMPLATES )
{
#if deal_II_dimension <= deal_II_space_dimension

template
void
KellyErrorEstimator<deal_II_dimension, deal_II_space_dimension>::
estimate<VEC,DH<deal_II_dimension,deal_II_space_dimension> > (const Mapping<deal_II_dimension, deal_II_space_dimension>      &,
          const DH<deal_II_dimension,deal_II_space_dimension>   &,
          const Quadrature<deal_II_dimension-1> &,
          const FunctionMap<deal_II_space_dimension>::type &,
          const VEC       &,
          Vector<float>           &,
          const ComponentMask &,
          const Function<deal_II_space_dimension>     *,
          const unsigned int       ,
          const unsigned int       ,
          const types::material_id);

template
void
KellyErrorEstimator<deal_II_dimension, deal_II_space_dimension>::
estimate<VEC,DH<deal_II_dimension,deal_II_space_dimension> > (
          const DH<deal_II_dimension,deal_II_space_dimension>   &,
          const Quadrature<deal_II_dimension-1> &,
          const FunctionMap<deal_II_space_dimension>::type &,
          const VEC       &,
          Vector<float>           &,
          const ComponentMask &,
          const Function<deal_II_space_dimension>     *,
          const unsigned int       ,
          const unsigned int       ,
          const types::material_id);

template
void
KellyErrorEstimator<deal_II_dimension, deal_II_space_dimension>::
estimate<VEC,DH<deal_II_dimension,deal_II_space_dimension> > (const Mapping<deal_II_dimension, deal_II_space_dimension>      &,
          const DH<deal_II_dimension,deal_II_space_dimension>   &,
          const Quadrature<deal_II_dimension-1> &,
          const FunctionMap<deal_II_space_dimension>::type &,
          const std::vector<const VEC *>       &,
          std::vector<Vector<float> *>         &,
          const ComponentMask &,
          const Function<deal_II_space_dimension>     *,
          const unsigned int       ,
          const unsigned int       ,
          const types::material_id);

template
void
KellyErrorEstimator<deal_II_dimension, deal_II_space_dimension>::
estimate<VEC,DH<deal_II_dimension,deal_II_space_dimension> > (
          const DH<deal_II_dimension,deal_II_space_dimension>   &,
          const Quadrature<deal_II_dimension-1> &,
          const FunctionMap<deal_II_space_dimension>::type &,
          const std::vector<const VEC *>       &,
          std::vector<Vector<float> *>         &,
          const ComponentMask &,
          const Function<deal_II_space_dimension>     *,
          const unsigned int       ,
          const unsigned int       ,
          const types::material_id);

template
void
KellyErrorEstimator<deal_II_dimension, deal_II_space_dimension>::
estimate<VEC,DH<deal_II_dimension,deal_II_space_dimension> > (const Mapping<deal_II_dimension, deal_II_space_dimension>      &,
          const DH<deal_II_dimension,deal_II_space_dimension>   &,
          const hp::QCollection<deal_II_dimension-1> &,
          const FunctionMap<deal_II_space_dimension>::type &,
          const VEC       &,
          Vector<float>           &,
          const ComponentMask &,
          const Function<deal_II_space_dimension>     *,
          const unsigned int       ,
          const unsigned int       ,
          const types::material_id);

template
void
KellyErrorEstimator<deal_II_dimension, deal_II_space_dimension>::
estimate<VEC,DH<deal_II_dimension,deal_II_space_dimension> > (
          const DH<deal_II_dimension,deal_II_space_dimension>   &,
          const hp::QCollection<deal_II_dimension-1> &,
          const FunctionMap<deal_II_space_dimension>::type &,
          const VEC       &,
          Vector<float>           &,
          const ComponentMask &,
          const Function<deal_II_space_dimension>     *,
          const unsigned int       ,
          const unsigned int       ,
          const types::material_id);

template
void
KellyErrorEstimator<deal_II_dimension, deal_II_space_dimension>::
estimate<VEC,DH<deal_II_dimension,deal_II_space_dimension> > (const Mapping<deal_II_dimension, deal_II_space_dimension>      &,
          const DH<deal_II_dimension,deal_II_space_dimension>   &,
          const hp::QCollection<deal_II_dimension-1> &,
          const FunctionMap<deal_II_space_dimension>::type &,
          const std::vector<const VEC *>       &,
          std::vector<Vector<float> *>         &,
          const ComponentMask &,
          const Function<deal_II_space_dimension>     *,
          const unsigned int       ,
          const unsigned int       ,
          const types::material_id);

template
void
KellyErrorEstimator<deal_II_dimension, deal_II_space_dimension>::
estimate<VEC,DH<deal_II_dimension,deal_II_space_dimension> > (
          const DH<deal_II_dimension,deal_II_space_dimension>   &,
          const hp::QCollection<deal_II_dimension-1> &,
          const FunctionMap<deal_II_space_dimension>::type &,
          const std::vector<const VEC *>       &,
          std::vector<Vector<float> *>         &,
          const ComponentMask &,
          const Function<deal_II_space_dimension>     *,
          const unsigned int       ,
          const unsigned int       ,
          const types::material_id);

#endif
}
