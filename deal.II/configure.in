dnl $Id$
dnl
dnl    This is the input for the ./configure script of the deal.II
dnl    libraries. All options and paths are stored in
dnl    the file common/Make.global_options.
dnl
dnl    In doc/Makefile some information on the kind of documentation
dnl    is stored.
dnl
dnl
dnl authors: Wolfgang Bangerth, Guido Kanschat, and others 
dnl          1999, 2000, 2001, 2002
dnl


dnl -------------------------------------------------------------
dnl                          Administrativa
dnl -------------------------------------------------------------

dnl switch off caching, since that leads to insurmountable trouble if
dnl you call ./configure subsequently on different systems without
dnl clearing the cache 
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl

AC_INIT([deal.II], [], [dealii@dealii.org])

AC_REVISION($Revision$)
AC_PREREQ(2.50)


dnl Where the output config file is located
AC_CONFIG_HEADER(base/include/base/config.h)

dnl Have the auxiliary tools like config.guess etc in contrib/config
AC_CONFIG_AUX_DIR(contrib/config)




dnl -------------------------------------------------------------
dnl                    Globals: Paths and versions
dnl -------------------------------------------------------------

dnl    Set the path to the deal.II libraries to `pwd`
DEAL_II_PATH=`pwd`

dnl Version numbers
DEAL_II_VERSION="`cat Version`"

dnl    Set major and minor version numbers of the deal.II library,
dnl    both as preprocessor variables and in Makefiles
DEAL_II_MAJOR=`cat Version | perl -pi -e 's/^(\d+)\..*/$1/;'`
DEAL_II_MINOR=`cat Version | perl -pi -e 's/^\d+\.(\d+).*/$1/;'`
AC_DEFINE_UNQUOTED(DEAL_II_MAJOR, $DEAL_II_MAJOR, 
                   [Major version number of deal.II])
AC_DEFINE_UNQUOTED(DEAL_II_MINOR, $DEAL_II_MINOR, 
                   [Minor version number of deal.II])
AC_DEFINE_UNQUOTED(DEAL_II_PATH, "$DEAL_II_PATH",
                   [Path to the deal.II directory])
AC_MSG_RESULT(Configuring deal.II version $DEAL_II_VERSION)
AC_SUBST(DEAL_II_MAJOR)
AC_SUBST(DEAL_II_MINOR)
AC_SUBST(DEAL_II_PATH)


dnl    For backward compatibility, also have DEAL2_DIR alias DEAL_II_PATH
DEAL2_DIR=$DEAL_II_PATH
AC_SUBST(DEAL2_DIR)

dnl    Check for machine type operating system
AC_CANONICAL_SYSTEM
dnl AC_SUBST(target_os)

dnl    Set the language for which subsequent tests shall be
dnl    performed to C++
AC_LANG(C++)




dnl -------------------------------------------------------------
dnl                          C/C++ compilers
dnl -------------------------------------------------------------

AC_MSG_RESULT()
AC_MSG_RESULT(---------------- configuring C/C++ compilers ----------------)

dnl Find a C compiler. This modifies the variable CC.
dnl In order to get the absolute path of the compiler, use the
dnl second line
dnl
dnl Likewise, find the right C++ compiler. Note that for historical 
dnl reasons, the compiler name and version is in the name GXX_VERSION,
dnl even if the compiler is not GCC.
dnl
dnl Note that on MIPS systems, the AC_PROG_CXX call erroneously sets
dnl -g in CXXFLAGS, which is not exactly what we want, so we store
dnl the old value temporarily
AC_PROG_CC
AC_PATH_PROG(CC,$CC)

OLDCXXFLAGS="$CXXFLAGS"
AC_PROG_CXX
CXXFLAGS="$OLDCXXFLAGS"
AC_PATH_PROG(CXX,$CXX) 


dnl Next determine which C++ compiler we have here and set compilation
dnl flags accordingly. Note that for historical reasons the name and
dnl version of the compiler is written to the variable GXX_VERSION.
DEAL_II_DETERMINE_CXX_BRAND
DEAL_II_SET_CXX_FLAGS
DEAL_II_SET_CXX_DEBUG_FLAG

AC_SUBST(GXX_VERSION)
AC_SUBST(CXXFLAGSG)
AC_SUBST(CXXFLAGSO)
AC_SUBST(CXXFLAGSPIC)
AC_SUBST(SHLIBLD)
AC_SUBST(LIBS)
AC_SUBST(LDFLAGS)
AC_SUBST(LDFLAGSPIC)
AC_SUBST(OBJEXT)







dnl -------------------------------------------------------------
dnl                          Multithreading
dnl -------------------------------------------------------------

dnl Test whether multithreading support is requested. This
dnl does not tell deal.II to actually use it, but the
dnl compiler flags are set to allow for it.
DEAL_II_CHECK_MULTITHREADING
DEAL_II_SET_MULTITHREADING_FLAGS
AC_SUBST(enablemultithreading)

dnl Next also check whether the MT code shall be used through 
dnl POSIX or ACE
DEAL_II_CHECK_USE_MT
AC_SUBST(withmultithreading)





dnl --------------------------------------------------------------
dnl                   Kludges and C++ compatibility
dnl --------------------------------------------------------------

dnl Various kludges for various systems: some systems need special
dnl treatment for some things. Since they sometimes depend on 
dnl whether other flags are set (e.g. the need for defining
dnl -D__EXTENSIONS__ depends on whether we use/not use threading
dnl options), this is done after checking for multithreading

DEAL_II_CHECK_ASSERT_THROW(debug, $CXXFLAGSG, 
                           [CXXFLAGSG="-DDISABLE_ASSERT_THROW $CXXFLAGSG"])
DEAL_II_CHECK_ASSERT_THROW(optimized, $CXXFLAGSO, 
                           [CXXFLAGSO="-DDISABLE_ASSERT_THROW $CXXFLAGSO"])
DEAL_II_CHECK_IBM_XLC_ERROR
DEAL_II_CHECK_LOCAL_TYPEDEF_COMP
DEAL_II_CHECK_TEMPLATE_SPEC_ACCESS
DEAL_II_CHECK_MEMBER_OP_TEMPLATE_INST
DEAL_II_CHECK_NAMESP_TEMPL_FRIEND_BUG
DEAL_II_CHECK_TEMPL_SPEC_FRIEND_BUG
DEAL_II_CHECK_TEMPL_CONST_MEM_PTR_BUG
DEAL_II_CHECK_CONST_MEM_FUN_PTR_BUG
DEAL_II_CHECK_IMPLEMENTED_PURE_FUNCTION_BUG
DEAL_II_CHECK_TEMPLATE_TEMPLATE_TYPEDEF_BUG
DEAL_II_CHECK_NESTED_CLASS_FRIEND_BUG
DEAL_II_CHECK_MEMBER_VAR_SPECIALIZATION_BUG
DEAL_II_CHECK_LONG_DOUBLE_LOOP_BUG
DEAL_II_HAVE_PRETTY_FUNCTION
DEAL_II_HAVE_STD_ITERATOR
DEAL_II_HAVE_STD_STRINGSTREAM
DEAL_II_HAVE_STD_NUMERIC_LIMITS
DEAL_II_HAVE_STD_OSTREAM_HEADER
DEAL_II_HAVE_STD_IOSFWD_HEADER
DEAL_II_HAVE_BUILTIN_EXPECT
DEAL_II_CHECK_GETRUSAGE
DEAL_II_CHECK_ISNAN
DEAL_II_CHECK_RAND_R
DEAL_II_CHECK_QUAD_DEFINE
DEAL_II_CHECK_ERROR_CODES_DEFINITION
AC_CHECK_FUNCS(gethostname)




dnl -------------------------------------------------------------
dnl                        Fortran 77 compilers
dnl -------------------------------------------------------------

AC_MSG_RESULT()
AC_MSG_RESULT(----------------- configuring F77 compilers -----------------)

dnl Find path to a Fortran 77 compiler. By default try to find a
dnl vendor compiler which is usually named `f77', and only if that could
dnl not be found, use `g77' instead. The reasoning is that usually vendor
dnl compilers are much better adapted to the system at hand, and since
dnl Fortran code is often used for efficiency reasons, this is
dnl important. Likewise, if external Fortran code is imported, it is
dnl usually code that is well tested and does not need much debugging, so
dnl good optimizations are helpful again.
dnl
dnl It is possible that no Fortran 77 compiler was found. Don't care,
dnl it may be that we don't need one (but we check below, when we must
dnl have it).
AC_PATH_PROGS(F77, [f77 g77])

dnl Next determine which f77 compiler we have here and set compilation
dnl flags accordingly. Only do that if we have an F77 compiler at all.
if test "x$F77" != "x" ; then
  DEAL_II_DETERMINE_F77_BRAND
  DEAL_II_SET_F77_FLAGS
fi

AC_SUBST(F77_VERSION)
AC_SUBST(F77FLAGSO)
AC_SUBST(F77FLAGSG)
AC_SUBST(F77FLAGSPIC)
AC_SUBST(F77LIBS)





dnl --------------------------------------------------------------
dnl                         Shared libraries
dnl --------------------------------------------------------------

AC_MSG_RESULT()
AC_MSG_RESULT(-------------- configuring shared/static libs ---------------)

AC_ARG_ENABLE(shared,
[  --enable-shared Set compiler flags to generate shared libraries],
    enableshared=$enableval,
    enableshared=yes)

dnl On AIX and alpha, shared libs don't work for us at present, so 
dnl disable them (we should probably use libtool there). Likewise on
dnl CygWin Windows systems, where we don't know how to create shared
dnl libs at all (at least at present)
case "$target" in
   *-aix* | alpha*-linux* | alpha*-osf[45]* | *cygwin | powerpc-apple-darwin* )
	   AC_MSG_WARN(Shared libraries not supported on $target. Using static libs instead)
	   enableshared=no 
	   ;;
esac

if test "x$enableshared" = "xyes" ; then
  lib_suffix=".so"
else
  lib_suffix=".a"
fi

AC_SUBST(enableshared)
AC_SUBST(lib_suffix)



dnl --------------------------------------------------------------
dnl                   Backward compatibility functions
dnl --------------------------------------------------------------
DEAL_II_CHECK_COMPAT_BLOCKER




dnl -------------------------------------------------------------
dnl Multigrid
dnl -------------------------------------------------------------

dnl    Test if multigrid should be enabled
dnl    default is yes if multigrid directory present
AC_ARG_ENABLE(multigrid,
[  --enable-multigrid Include multigrid code in library],
    enablemultigrid=$enableval,
    if test -r deal.II/include/multigrid/multigrid.h ; then
      enablemultigrid=yes ;
    else
      enablemultigrid=no ;
    fi)
if test "$enablemultigrid" = yes ; then
   AC_MSG_RESULT(configuring multigrid)
   AC_DEFINE(ENABLE_MULTIGRID, 1, 
             [Enable the multigrid components of the library])
fi
AC_SUBST(enablemultigrid)




dnl -------------------------------------------------------------
dnl                  Existence of additional libraries
dnl -------------------------------------------------------------

AC_MSG_RESULT()
AC_MSG_RESULT(---------------- configuring additional libs ----------------)

DEAL_II_CONFIGURE_TECPLOT
AC_SUBST(TECPLOT_LIBRARY_PATH)
AC_SUBST(TECPLOT_INCLUDE_PATH)

DEAL_II_CONFIGURE_HSL
AC_SUBST(USE_CONTRIB_HSL)




dnl -------------------------------------------------------------
dnl                   Consistency of compiler flags
dnl -------------------------------------------------------------

AC_MSG_RESULT()
AC_MSG_RESULT(------------------ checking compiler flags ------------------)

dnl Last check: test whether CXXFLAGS and F77FLAGS are ok
DEAL_II_CHECK_CXXFLAGS_CONSISTENCY
DEAL_II_CHECK_F77FLAGS_CONSISTENCY




dnl -------------------------------------------------------------
dnl                       Third party programs
dnl -------------------------------------------------------------

AC_MSG_RESULT()
AC_MSG_RESULT(---------------- configuring other programs -----------------)

DEAL_II_CHECK_KDOC
AC_SUBST(kdocdir)
AC_SUBST(kdocversion)

DEAL_II_CHECK_DOCXX
AC_SUBST(docxx)

AC_PATH_PROG(PERL, perl)
AC_SUBST(PERL)




dnl -------------------------------------------------------------
dnl                     Configure subdirectories
dnl -------------------------------------------------------------

dnl    Configure the `tests' directory, if that is installed. also
dnl    configure the programs in the contrib directory
AC_CONFIG_SUBDIRS(contrib tests)




dnl -------------------------------------------------------------
dnl                          Output results
dnl -------------------------------------------------------------

AC_MSG_RESULT()
AC_MSG_RESULT(--------------------- generating output ---------------------)

dnl First set the templates for config.h
AH_TOP(
[
//----------------------------  config.h  ---------------------------
//    $Id$
//    Version: $Name$
//
//    Copyright (C) 2001, 2002 by the deal.II authors
//
//    This file is subject to QPL and may not be  distributed
//    without copyright and license information. Please refer
//    to the file deal.II/doc/license.html for the  text  and
//    further information on this license.
//
//----------------------------  config.h  ---------------------------
#ifndef __deal2__config_h
#define __deal2__config_h

// Note: you should not usually have to change this file, as it is
// automatically generated from the ./configure file in the top level
// directory. If there are problems with the contents of this file,
// rather than changing it, try to modify the mechanisms in
// configure.in that generated this output. The reason is that you
// would have to make these changes each time you compile a new
// version of the library, or on a different computer. Furthermore, it
// is important not to build different parts of the library with
// different versions of this file.
//
// In case of problems in autodetection of features of your build
// environment, contact the authors of the library.

])


AH_BOTTOM(
[
/**
 * Have a namespace into which we declare some numeric constants, such
 * as pi. Unfortunately, these are not always available, on all systems
 * or depending on compiler flags, so we duplicate their declarations
 * here to make them unconditionally available to all other parts of the
 * library.
 *
 * The constants defined here are a subset of the @p{M_XXX} constants sometimes
 * declared in the system include file @p{math.h}, but without the 
 * prefix @p{M_}.
 */
namespace deal_II_numbers {
                                             /**
                                              * e
                                              */
  static const double  E       = 2.7182818284590452354;

                                             /**
                                              * log_2 e
                                              */
  static const double  LOG2E   = 1.4426950408889634074;

                                             /**
                                              * log_10 e
                                              */
  static const double  LOG10E  = 0.43429448190325182765;

                                             /**
                                              * log_e 2
                                              */
  static const double  LN2     = 0.69314718055994530942;

                                             /**
                                              * log_e 10
                                              */
  static const double  LN10    = 2.30258509299404568402;

                                             /**
                                              * pi
                                              */
  static const double  PI      = 3.14159265358979323846;

                                             /**
                                              * pi/2
                                              */
  static const double  PI_2    = 1.57079632679489661923;

                                             /**
                                              * pi/4
                                              */
  static const double  PI_4    = 0.78539816339744830962;

                                             /**
                                              * sqrt(2)
                                              */
  static const double  SQRT2   = 1.41421356237309504880;

                                             /**
                                              * 1/sqrt(2)
                                              */
  static const double  SQRT1_2 = 0.70710678118654752440;
};
#endif
])

dnl Write output to the global options file
AC_OUTPUT(common/Make.global_options common/Makefile.template doc/Makefile doc/auto/Makefile doc/auto/kdoc/Makefile)


echo
echo
echo -------------------------------------------------------------
echo
echo "     The  deal.II  library is now configured. In order to"
echo "     compile it and to generate the  documentation,  just"
echo "     call 'make' without arguments for a list of options."
echo "     For more information, see the Readme file."
echo
echo -------------------------------------------------------------
echo

