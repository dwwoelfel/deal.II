dnl $Id$
dnl
dnl    This is the input for the ./configure script of the deal.II
dnl    libraries. The file is common/Make.global_options
dnl    where all options and paths are stored.
dnl
dnl    In doc/Makefile some information on the kind of documentation
dnl    is stored.
dnl
dnl
dnl author: Wolfgang Bangerth, Guido Kanschat 1999, 2000
dnl


define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl
AC_INIT(base)


dnl    Set the path to the deal.II libraries to `pwd`
DEAL2_DIR=`pwd`
AC_SUBST(DEAL2_DIR)


dnl    Find a C compiler, which is used when building
dnl    shared libaries. This modifies the variable CC.
dnl    In order to get the absolute path of the compiler, use the
dnl    second line
AC_PROG_CC
CC=`which $CC`


dnl    Find the right C++ compiler. This modifies the following
dnl    variables: CXX, GXX, CXXFLAGS
AC_PROG_CXX
CXX=`which $CXX`
if test $GXX = yes ; then
  # find out the right version
  GXX_VERSION_STRING=`($CXX -v 2>&1) | grep "gcc version"`
  if test -n "`echo $GXX_VERSION_STRING | grep egcs-1.1`" ; then
    AC_MSG_RESULT(Compiler is egcs-1.1)
    GXX_VERSION=egcs1.1
  else
    if test -n "`echo $GXX_VERSION_STRING | grep 'gcc version 2.95'`" ; then
      AC_MSG_RESULT(Compiler is gcc-2.95)
      GXX_VERSION=gcc2.95
    else
      AC_MSG_RESULT(Compiler is unknown but accepted)
      GXX_VERSION=other
    fi
  fi
else
  AC_MSG_ERROR(No configuration options for this C++ compiler
               supported at present)
  exit 1
fi
AC_SUBST(GXX_VERSION)



dnl    Check for the operating system
OS=`uname`
AC_SUBST(OS)


dnl    Find path to perl
AC_PATH_PROG(PERL, perl)


dnl    Test whether multithreading support is requested. This
dnl    does not tell deal.II to actually use it, but the
dnl    compiler flags are set to allow for it,
AC_ARG_ENABLE(multithreading,
[  --enable-multithreading Set compiler flags to allow for multithreaded programs],
    enablemultithreading=$enableval,
    enablemultithreading=no)
AC_SUBST(enablemultithreading)


dnl    Test whether the user wants the multithread code in the 
dnl    library to be used
AC_ARG_WITH(multithreading,
[  --with-multithreading=DIR use DIR as path to the ACE library],
    withmultithreading=$withval,
    withmultithreading=no)
if test $withmultithreading != no ; then
  AC_MSG_CHECKING(for ACE)
  if test -d $withmultithreading ; then
    AC_MSG_RESULT(found)
  else
    AC_MSG_RESULT(not found)
    AC_MSG_ERROR(Invalid ACE path)
  fi
fi
AC_SUBST(withmultithreading)



dnl    Test whether shared libraries support is requested. Note:
dnl    default is 'yes', if not on AIX
AC_ARG_ENABLE(shared,
[  --enable-shared Set compiler flags to generate shared libraries],
    enableshared=$enableval,
    if test $OS = AIX ; then
      enableshared=no ;
    else
      enableshared=yes ;
    fi)
if test $enableshared = yes ; then
   AC_MSG_RESULT(Configuring deal.II for shared libraries)
else
   AC_MSG_RESULT(Configuring deal.II for statically linked libraries)
fi
AC_SUBST(enableshared)

dnl    Test if multigrid should be enabled
dnl    default is no
AC_ARG_ENABLE(multigrid,
[  --enable-multigrid Include multigrid code in library],
    enablemultigrid=$enableval,
    if test -r deal.II/source/multigrid ; then
      enablemultigrid=yes ;
    else
      enablemultigrid=no ;
    fi)
if test $enablemultigrid = yes ; then
   AC_MSG_RESULT(Configuring multigrid)
fi
AC_SUBST(enablemultigrid)



dnl    Find the kdoc directory for documentation. The old one is in
dnl    doc/auto/scripts, but you might want a newer version.
AC_ARG_WITH(kdoc,
[  --with-kdoc=DIR use kdoc installed in DIR],
    kdocdir=$withval,
    kdocdir=doc/auto/scripts/kdoc)
if test -r $kdocdir/kdoc ; then
  AC_MSG_RESULT(found)
else
  AC_MSG_RESULT(not found)
  AC_MSG_ERROR(Invalid kdoc path)
fi
if test -r $kdocdir/Version ; then
  kdocversion=`cat $kdocdir/Version` ;
else
  kdocversion=1;
fi
AC_SUBST(kdocdir)
AC_SUBST(kdocversion)





dnl -----------------------------------------------
dnl Configure other packages

dnl Configure the `tests' directory, if that is installed.
AC_CONFIG_SUBDIRS(tests)






dnl    Write output to the global options file
AC_OUTPUT(common/Make.global_options doc/Makefile doc/auto/Makefile doc/auto/kdoc/Makefile)
