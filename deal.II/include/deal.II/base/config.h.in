//----------------------------  config.h.in  ---------------------------
//    $Id$
//    Version: $Name$
//
//    Copyright (C) 2012 by the deal.II authors
//
//    TODO: Header
//
//    Author: Matthias Maier <matthias.maier@iwr.uni-heidelberg.de>
//
//----------------------------  config.h.in  ---------------------------

#ifndef __deal2__config_h
#define __deal2__config_h


/**
 * Two macro names that we put at the top and bottom of all deal.II files
 * and that will be expanded to "namespace dealii {" and "}".
 */
#define DEAL_II_NAMESPACE_OPEN namespace dealii {
#define DEAL_II_NAMESPACE_CLOSE }


/**************************************
 * Configured in setup_deal_ii.cmake: *
 **************************************/

/* Defined to the full name of this package. */
#define DEAL_II_PACKAGE_NAME "@DEAL_II_PACKAGE_NAME@"

/* Defined to the version of this package. */
#define DEAL_II_PACKAGE_VERSION "@DEAL_II_PACKAGE_VERSION@"

/* Major version number of deal.II */
#define DEAL_II_VERSION_MAJOR @DEAL_II_VERSION_MAJOR@

/* Minor version number of deal.II */
#define DEAL_II_VERSION_MINOR @DEAL_II_VERSION_MINOR@


/*****************************************
 * Configured in configure_arpack.cmake: *
 *****************************************/

/* Defined if an ARPACK installation was found and is going to be used */
#cmakedefine DEAL_II_USE_ARPACK


/*************************************************
 * Configured in configure_functionparser.cmake: *
 *************************************************/

/* Defined if you have the `functionparser' library */
#cmakedefine HAVE_FUNCTIONPARSER


/***************************************
 * Configured in configure_hdf5.cmake: *
 ***************************************/

/* Defined if deal.II was configured with hdf5 support */
#cmakedefine DEAL_II_HAVE_HDF5


/*****************************************
 * Configured in configure_lapack.cmake: *
 *****************************************/

/* Defined if deal.II was configured with LAPACK support */
#cmakedefine HAVE_LIBLAPACK

/* Defined if you have the `daxpy_' function. */
#cmakedefine HAVE_DAXPY_

/* Defined if you have the `dgeevx_' function. */
#cmakedefine HAVE_DGEEVX_

/* Defined if you have the `dgeev_' function. */
#cmakedefine HAVE_DGEEV_

/* Defined if you have the `dgelsd_' function. */
#cmakedefine HAVE_DGELSD_

/* Defined if you have the `dgemm_' function. */
#cmakedefine HAVE_DGEMM_

/* Defined if you have the `dgemv_' function. */
#cmakedefine HAVE_DGEMV_

/* Defined if you have the `dgeqrf_' function. */
#cmakedefine HAVE_DGEQRF_

/* Defined if you have the `dgesdd_' function. */
#cmakedefine HAVE_DGESDD_

/* Defined if you have the `dgesvd_' function. */
#cmakedefine HAVE_DGESVD_

/* Defined if you have the `dgetrf_' function. */
#cmakedefine HAVE_DGETRF_

/* Defined if you have the `dgetri_' function. */
#cmakedefine HAVE_DGETRI_

/* Defined if you have the `dgetrs_' function. */
#cmakedefine HAVE_DGETRS_

/* Defined if you have the `dorgqr_' function. */
#cmakedefine HAVE_DORGQR_

/* Defined if you have the `dormqr_' function. */
#cmakedefine HAVE_DORMQR_

/* Defined if you have the `dstev_' function. */
#cmakedefine HAVE_DSTEV_

/* Defined if you have the `dsyevx_' function. */
#cmakedefine HAVE_DSYEVX_

/* Defined if you have the `dsygvx_' function. */
#cmakedefine HAVE_DSYGVX_

/* Defined if you have the `sgeevx_' function. */
#cmakedefine HAVE_SGEEVX_

/* Defined if you have the `sgeev_' function. */
#cmakedefine HAVE_SGEEV_

/* Defined if you have the `sgelsd_' function. */
#cmakedefine HAVE_SGELSD_

/* Defined if you have the `sgemm_' function. */
#cmakedefine HAVE_SGEMM_

/* Defined if you have the `sgemv_' function. */
#cmakedefine HAVE_SGEMV_

/* Defined if you have the `sgeqrf_' function. */
#cmakedefine HAVE_SGEQRF_

/* Defined if you have the `sgesdd_' function. */
#cmakedefine HAVE_SGESDD_

/* Defined if you have the `sgesvd_' function. */
#cmakedefine HAVE_SGESVD_

/* Defined if you have the `sgetrf_' function. */
#cmakedefine HAVE_SGETRF_

/* Defined if you have the `sgetri_' function. */
#cmakedefine HAVE_SGETRI_

/* Defined if you have the `sgetrs_' function. */
#cmakedefine HAVE_SGETRS_

/* Defined if you have the `sorgqr_' function. */
#cmakedefine HAVE_SORGQR_

/* Defined if you have the `sormqr_' function. */
#cmakedefine HAVE_SORMQR_

/* Defined if you have the `sstev_' function. */
#cmakedefine HAVE_SSTEV_

/* Defined if you have the `ssyevx_' function. */
#cmakedefine HAVE_SSYEVX_

/* Defined if you have the `ssygvx_' function. */
#cmakedefine HAVE_SSYGVX_

/* Defined if you have the `strtrs_' function. */
#cmakedefine HAVE_STRTRS_


/****************************************
 * Configured in configure_metis.cmake: *
 ****************************************/

/* Defined if a Metis installation was found and is going to be used */
#cmakedefine DEAL_II_USE_METIS


/**************************************
 * Configured in configure_mpi.cmake: *
 **************************************/

/* Defined if the compiler supports mpi */
#cmakedefine DEAL_II_COMPILER_SUPPORTS_MPI


/*****************************************
 * Configured in configure_mumps.cmake:  *
 *****************************************/

/* Defined if an MUMPS installation was found and is going to be used */
#cmakedefine DEAL_II_USE_MUMPS


/*****************************************
 * Configured in configure_netcdf.cmake: *
 *****************************************/

/* Defined if you have the `NetCDF' library */
#cmakedefine HAVE_LIBNETCDF


/****************************************
 * Configured in configure_p4est.cmake: *
 ****************************************/

/* Defined if we are to use the p4est library to distribute meshes on a
   cluster computer. */
#cmakedefine DEAL_II_USE_P4EST


/****************************************
 * Configured in configure_petsc.cmake: *
 ****************************************/

/* Defined if a PETSc installation was found and is going to be used */
#cmakedefine DEAL_II_USE_PETSC

/*
 * Note: The following definitions will be set in petscconf.h and
 *       petscversion.h, so we don't repeat them here.
 *
 *  PETSC_VERSION_MAJOR
 *  PETSC_VERSION_MINOR
 *  PETSC_VERSION_SUBMINOR
 *  PETSC_VERSION_PATCH
 *  PETSC_VERSION_RELEASE
 *  PETSC_USE_COMPLEX
 */

/**
 * These macros are defined to make testing for PETSc versions within
 * the deal.II main code as simple as possible. In brief they are used
 * like this: (i) DEAL_II_PETSC_VERSION_LT is used to advance the
 * PETScWrappers to newer versions of PETSc while preserving backward
 * compatibility; and (ii) DEAL_II_PETSC_VERSION_GTE is used to add
 * functionality to the PETScWrappers that does not exist in previous
 * versions of PETSc.  Examples of usage can be found in
 * lac/source/petsc_matrix_base.h.  Note: SLEPcWrappers do not need
 * their own analogical macros, since SLEPc and PETSc must have
 * identical version numbers anyways.
 */
#define DEAL_II_PETSC_VERSION_LT(major,minor,subminor) \
  ((PETSC_VERSION_MAJOR * 10000 + \
    PETSC_VERSION_MINOR * 100 + \
    PETSC_VERSION_SUBMINOR) \
    <  \
    (major)*10000 + (minor)*100 + (subminor))

#define DEAL_II_PETSC_VERSION_GTE(major,minor,subminor) \
  ((PETSC_VERSION_MAJOR * 10000 + \
    PETSC_VERSION_MINOR * 100 + \
    PETSC_VERSION_SUBMINOR) \
    >=  \
    (major)*10000 + (minor)*100 + (subminor))


/****************************************
 * Configured in configure_slepc.cmake: *
 ****************************************/

/* Defined if a SLEPc installation was found and is going to be used */
#cmakedefine DEAL_II_USE_SLEPC


/**************************************
 * Configured in configure_tbb.cmake: *
 **************************************/

/* Flag indicating whether the library shall be compiled for multithreaded
 * applications. If so, then it is set to one, otherwise to zero.
 */
#cmakedefine DEAL_II_USE_MT

/* Defined if multi-threading is to be achieved by using the POSIX functions
 */
#cmakedefine DEAL_II_USE_MT_POSIX

/* Defined if POSIX is supported but not the newer POSIX barrier functions.
 * Barriers will then not work in the library, but the other threading
 * functionality is available.
 */
#cmakedefine DEAL_II_USE_MT_POSIX_NO_BARRIERS

/**
 * Depending on the use of threads, we will have to make some variables
 * volatile. We do this here in a very old-fashioned C-style, but still
 * convenient way.
 */
#ifdef DEAL_II_USE_MT
#  define DEAL_VOLATILE volatile
#else
#  define DEAL_VOLATILE
#endif


/*******************************************
 * Configured in configure_trilinos.cmake: *
 *******************************************/

/* Defined if a Trilinos installation was found and is going to be used */
#cmakedefine DEAL_II_USE_TRILINOS


/******************************************
 * Configured in configure_umfpack.cmake: *
 ******************************************/

/* Defined if deal.II was configured with UMFPACK support */
#cmakedefine HAVE_LIBUMFPACK


/***************************************
 * Configured in configure_zlib.cmake: *
 ***************************************/

/* Defined if deal.II was configure with zlib support */
#cmakedefine HAVE_LIBZ


/**********************************************
 * Configured in check_for_compiler_features: *
 **********************************************/

/* Defined if vector iterators are just plain pointers */
#cmakedefine DEAL_II_VECTOR_ITERATOR_IS_POINTER

/* Define if the compiler provides __builtin_expect */
#cmakedefine HAVE_BUILTIN_EXPECT

/* Define if the compiler provides __verbose_terminate_handler */
#cmakedefine HAVE_VERBOSE_TERMINATE

/* Define if deal.II is linked against a libc that provides stacktrace
 * debug information that can be printed out in the exception class
 * */
#cmakedefine HAVE_GLIBC_STACKTRACE

/* Defined if the std c++ library provides a demangler conforming to the
 * GCC libstdc++ interface.
 */
#cmakedefine HAVE_LIBSTDCXX_DEMANGLER

/* Equal to 0 in the generic case, equal to 1 if CPU compiled for supports
 * SSE2, equal to 2 if CPU compiled for supports AVX
 */
#define DEAL_II_COMPILER_VECTORIZATION_LEVEL @DEAL_II_COMPILER_VECTORIZATION_LEVEL@

/* Defined if the compiler can use arithmetic operations on vectorized data
 * types
 */
#cmakedefine DEAL_II_COMPILER_USE_VECTOR_ARITHMETICS

/* Defined if the prototype of abort() has a no-throw exception specification.
 */
#cmakedefine DEAL_II_ABORT_NOTHROW_EXCEPTION

/* If already available, do not define at all. Otherwise, define to
 * __func__ if that is available. In all other cases, indicate that no
 * information about the present function is available for this compiler.
 */
#cmakedefine __PRETTY_FUNCTION__ @__PRETTY_FUNCTION__@

/* Set to the minimal number of elements a std::vector<T> can always hold,
 * i.e. its minimal capacity.
 */
#define DEAL_II_MIN_VECTOR_CAPACITY @DEAL_II_MIN_VECTOR_CAPACITY@

/* Set to the minimal number of elements a std::vector<bool> can always
 * hold, i.e. its minimal capacity.
 */
#define DEAL_II_MIN_BOOL_VECTOR_CAPACITY @DEAL_II_MIN_BOOL_VECTOR_CAPACITY@

/* If the compiler supports it, then this variable is defined to a string
 * that when written after a function name makes the compiler emit a warning
 * whenever this function is used somewhere that its use is deprecated.
 */
#cmakedefine DEAL_II_DEPRECATED @DEAL_II_DEPRECATED@



/******************************************
 * Configured in check_for_compiler_bugs: *
 ******************************************/

/* Defined if we have to work around a bug where the compiler doesn't accept
 * an explicit destructor call. See the aclocal.m4 file in the top-level
 * directory for a description of this bug.
 */
#cmakedefine DEAL_II_EXPLICIT_DESTRUCTOR_BUG

/* Defined if we have to work around a bug with some compilers that will not
 * allow us to specify a fully specialized class of a template as a friend.
 * See the aclocal.m4 file in the top-level directory for a description of
 * this bug.
 * */
#cmakedefine DEAL_II_TEMPL_SPEC_FRIEND_BUG

/* Defined if the compiler refuses to allow the explicit specialization of
 * static member arrays. For the exact failure mode, look at aclocal.m4 in the
 * top-level directory.
 */
#cmakedefine DEAL_II_MEMBER_ARRAY_SPECIALIZATION_BUG

/* Defined if the compiler requires the use of the template keyword for
 * disambiguation keyword in certain contexts in which it is not supposed to
 * do so. For the exact failure mode, look at aclocal.m4 in the top-level
 * directory.
 */
#cmakedefine DEAL_II_TEMPL_OP_DISAMBIGUATION_BUG

/* Defined if the compiler does not honor the explicit keyword on template
 * constructors.
 */
#cmakedefine DEAL_II_EXPLICIT_CONSTRUCTOR_BUG

/* Defined if the compiler has a bug in deducing the type of pointers to const
 * member functions.
 */
#cmakedefine DEAL_II_CONST_MEMBER_DEDUCTION_BUG

/* Defined if the compiler gets an internal error compiling some code that
 * involves boost::bind
 */
#cmakedefine DEAL_II_BOOST_BIND_COMPILER_BUG



/*****************************************
 * Configured in check_for_cxx_features: *
 *****************************************/

/* Defined if the compiler we use supports the C++2011 standard well enough
 * to allow using the standard library classes instead of the corresponding
 * BOOST classes.
 */
#cmakedefine DEAL_II_CAN_USE_CXX1X

/* Defined if isnan is available */
#cmakedefine HAVE_ISNAN

/* Defined if _isnan is available */
#cmakedefine HAVE_UNDERSCORE_ISNAN

/* Defined if std::isfinite is available */
#cmakedefine DEAL_II_HAVE_ISFINITE


/********************************************
 * Configured in check_for_system_features: *
 ********************************************/

/* Defined if the system stores words with the most significant byte first */
#cmakedefine DEAL_II_WORDS_BIGENDIAN


/* Defined if you have the <sys/resource.h> header file */
#cmakedefine HAVE_SYS_RESOURCE_H

/* Defined if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H

/* Defined if you have the <sys/times.h> header file. */
#cmakedefine HAVE_SYS_TIMES_H

/* Defined if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H


/* Defined if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* Defined if you have the "gethostname" function. */
#cmakedefine HAVE_GETHOSTNAME

/* Defined if you have the "getpid' function. */
#cmakedefine HAVE_GETPID

/* Defined if you have the "rand_r" function */
#cmakedefine HAVE_RAND_R

/* Defined if you have the "times" function. */
#cmakedefine HAVE_TIMES


/* Defined if deal.II was configured on a native Windows platform. */
#cmakedefine DEAL_II_MSVC

/* Disable a bunch of warnings for Microsoft Visual C++. */
#ifdef DEAL_II_MSVC
#  pragma warning( disable : 4244 ) /* implied downcasting from double to float */
#  pragma warning( disable : 4267 ) /* implied downcasting from size_t to unsigned int */
#  pragma warning( disable : 4996 ) /* unsafe functions, such as strcat and sprintf */
#  pragma warning( disable : 4355 ) /* 'this' : used in base member initializer list */
#  pragma warning( disable : 4661 ) /* no suitable definition provided for explicit template instantiation request */
#  pragma warning( disable : 4800 ) /* forcing value to bool 'true' or 'false' (performance warning) */
#  pragma warning( disable : 4146 ) /* unary minus operator applied to unsigned type, result still unsigned */
#  pragma warning( disable : 4667 ) /* no function template defined that matches forced instantiation */
#  pragma warning( disable : 4520 ) /* multiple default constructors specified */
#  pragma warning( disable : 4700 ) /* uninitialized local variable */
#  pragma warning( disable : 4789 ) /* destination of memory copy is too small */
#  pragma warning( disable : 4808 ) /* case 'value' is not a valid value for switch condition of type 'bool */
#endif // DEAL_II_MSVC


#include <deal.II/base/numbers.h>
#include <deal.II/base/types.h>

#endif
