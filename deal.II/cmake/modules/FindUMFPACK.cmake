#
# Try to find the UMFPACK library
#
# This module exports
#
#   UMFPACK_LIBRARIES
#   UMFPACK_INCLUDE_DIRS
#   UMFPACK_LINKER_FLAGS
#

INCLUDE(FindPackageHandleStandardArgs)

SET_IF_EMPTY(AMD_DIR "$ENV{AMD_DIR}")
SET_IF_EMPTY(UMFPACK_DIR "$ENV{UMFPACK_DIR}")

#
# UMFPACK depends on AMD and BLAS, so search for them:
#
FIND_PACKAGE(AMD)
FIND_PACKAGE(BLAS)

FIND_PATH(UMFPACK_INCLUDE_DIR umfpack.h
  HINTS
    ${AMD_DIR}
    ${UMFPACK_DIR}
  PATH_SUFFIXES
    umfpack include/umfpack include Include UMFPACK/Include ../UMFPACK/Include
  )

FIND_LIBRARY(UMFPACK_LIBRARY
  NAMES umfpack
  HINTS
    ${UMFPACK_DIR}
  PATH_SUFFIXES
    lib${LIB_SUFFIX} lib64 lib Lib UMFPACK/Lib ../UMFPACK/Lib
  )

SET(UMFPACK_LIBRARIES
  ${UMFPACK_LIBRARY}
  ${AMD_LIBRARY}
  ${BLAS_LIBRARIES}
  )

SET(UMFPACK_INCLUDE_DIRS
  ${UMFPACK_INCLUDE_DIR}
  ${AMD_INCLUDE_DIR}
  )

SET(UMFPACK_LINKER_FLAGS
  ${BLAS_LINKER_FLAGS}
  )

FIND_PACKAGE_HANDLE_STANDARD_ARGS(UMFPACK DEFAULT_MSG
  UMFPACK_LIBRARIES
  UMFPACK_INCLUDE_DIRS
  )

IF(UMFPACK_FOUND)
  MARK_AS_ADVANCED(
    UMFPACK_LIBRARY
    UMFPACK_INCLUDE_DIR
    UMFPACK_DIR
    AMD_LIBRARY
    AMD_INCLUDE_DIR
    lapack_LIBRARY
    atlas_LIBRARY
    blas_LIBRARY
  )
ELSE()
  SET(UMFPACK_DIR "" CACHE STRING
    "An optional hint to an UMFPACK directory"
    )
ENDIF()

