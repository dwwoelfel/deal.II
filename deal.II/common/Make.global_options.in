# $Id$

###############################################################################
## Please note:
##   The ./configure script generates Make.global_options from 
##   Make.global_options.in, so if you want to change something,
##   then do it in the latter file and re-run ./configure in the
##   top level directory
##
##
##   This file exports several variables. They are documented in 
##   the file  doc/development/makefiles.html. If you add a new
##   variable, make sure it is documented in 
##   doc/development/makefiles.1.html and listed in 
##   doc/development/Makefile.
###############################################################################



######################################################
# the following lines will be replaced by the output 
# of ./configure

D                    = @DEAL2_DIR@
CC                   = @CC@
CXX                  = @CXX@
GXX-VERSION          = @GXX_VERSION@
CC                   = @CC@
CC-VERSION           = @CC_VERSION@
SHLIBLD              = @SHLIBLD@
AR                   = @AR@
RANLIB               = @RANLIB@
LDFLAGS              = @LDFLAGS@
F77                  = @F77@
F77-VERSION          = @F77_VERSION@
F77LIBS              = @F77LIBS@
NEEDS_F77LIBS        = @NEEDS_F77LIBS@
LIBS                 = @LIBS@ @TECPLOT_LIB@ @BLAS_LIB@ @HSL_LIB@
LIBDIR               = $D/lib
PERL                 = @PERL@
enable-multithreading= @enablemultithreading@
with-multithreading  = @withmultithreading@
enable-shared        = @enableshared@
DEAL_II_MAJOR        = @DEAL_II_MAJOR@
DEAL_II_MINOR        = @DEAL_II_MINOR@

USE_CONTRIB_PETSC    = @USE_CONTRIB_PETSC@
DEAL_II_PETSC_DIR    = @DEAL_II_PETSC_DIR@
DEAL_II_PETSC_ARCH   = @DEAL_II_PETSC_ARCH@
DEAL_II_PETSC_VERSION_MAJOR    = @DEAL_II_PETSC_VERSION_MAJOR@
DEAL_II_PETSC_VERSION_MINOR    = @DEAL_II_PETSC_VERSION_MINOR@
DEAL_II_PETSC_VERSION_SUBMINOR = @DEAL_II_PETSC_VERSION_SUBMINOR@

USE_CONTRIB_METIS    = @USE_CONTRIB_METIS@
DEAL_II_METIS_DIR    = @DEAL_II_METIS_DIR@

TARGET               = @target@

# if FORTRAN sublibs are used, add F77 libs to linker flags
ifeq ($(NEEDS_F77LIBS),yes)
  LDFLAGS += $(F77LDFLAGS)
  LIBS    += $(F77LIBS)
endif

######################################################
# now configuration for compiler flags, pathes, etc

# path for libraries 

LIBPATH    += $(addprefix -L,$(LIBDIR))


# add search path for libraries to make dependencies
vpath %.a $(libdir)
vpath %.so $(libdir)



lib-suffix = @lib_suffix@
OBJEXT     = @OBJEXT@
EXEEXT     = @EXEEXT@

lib-base.o     = $(LIBDIR)/libbase$(lib-suffix)
lib-base.g     = $(LIBDIR)/libbase.g$(lib-suffix)

lib-lac.o      = $(LIBDIR)/liblac$(lib-suffix) @UMFPACK_LIB@
lib-lac.g      = $(LIBDIR)/liblac.g$(lib-suffix) @UMFPACK_LIB@

lib-deal2-1d.o = $(LIBDIR)/libdeal_II_1d$(lib-suffix)
lib-deal2-2d.o = $(LIBDIR)/libdeal_II_2d$(lib-suffix)
lib-deal2-3d.o = $(LIBDIR)/libdeal_II_3d$(lib-suffix)

lib-deal2-1d.g = $(LIBDIR)/libdeal_II_1d.g$(lib-suffix)
lib-deal2-2d.g = $(LIBDIR)/libdeal_II_2d.g$(lib-suffix)
lib-deal2-3d.g = $(LIBDIR)/libdeal_II_3d.g$(lib-suffix)

# since the PETSc libs are called the same for both debug and
# optimized mode, we have to have a trick to let the executable
# know which ones are the right (since apparently LD_LIBRARY_PATH
# can't do the trick unless you want to reset it every time
# you switch from debug to optimized mode). To avoid messing with
# -Wl,-rpath in our linker flags, we create one convenience library
# for all PETSc libraries in our own lib directory, and have this one
# twiddle with whatever is necessary to link in PETSc.
lib-contrib-petsc-path.g = $(DEAL_II_PETSC_DIR)/lib/libg_c++/$(DEAL_II_PETSC_ARCH)
lib-contrib-petsc-path.o = $(DEAL_II_PETSC_DIR)/lib/libO_c++/$(DEAL_II_PETSC_ARCH)
lib-contrib-petsc.g = $(LIBDIR)/libpetsc.g$(lib-suffix)
lib-contrib-petsc.o = $(LIBDIR)/libpetsc$(lib-suffix)

# same for metis, except that there is only one library in that case
lib-contrib-metis = $(DEAL_II_METIS_DIR)/libmetis.a


# if PETSC is used, we need to add a number of libraries to what
# we link for LAC
ifeq ($(USE_CONTRIB_PETSC),yes)
  lib-lac.g += $(lib-contrib-petsc.g)
  lib-lac.o += $(lib-contrib-petsc.o)
endif


# If METIS was detected, add it to the lac libs, since this is where we call
# them
ifeq ($(USE_CONTRIB_METIS),yes)
  lib-lac.g += $(lib-contrib-metis)
  lib-lac.o += $(lib-contrib-metis)
endif


# include paths. do not take into account a possibly existing
# environment variable, since the compiler will evaluate the value of
# that anyway at compile time

include-path-petsc           = $(DEAL_II_PETSC_DIR)/include
include-path-petsc-bmake     = $(DEAL_II_PETSC_DIR)/bmake/$(DEAL_II_PETSC_ARCH)
include-path-metis           = $(DEAL_II_METIS_DIR)/Lib

INCLUDE = -I$D/base/include -I$D/lac/include -I$D/deal.II/include \
	  -I$D/contrib/boost/include \
	  @TECPLOT_INCLUDE_DIR@ @UMFPACK_INCLUDE_DIR@ @HSL_INCLUDE_DIR@

# add PETSc and METIS include path if necessary. this rule
# (and the one further down below to get correct flags) should eventually
# be replaced by something where we do not blindly include PETSc make files
# (and thus import all of its variables), but rather set up a scheme to
# extract these values upon configuration
ifeq ($(USE_CONTRIB_PETSC),yes)
  include $(DEAL_II_PETSC_DIR)/bmake/$(DEAL_II_PETSC_ARCH)/packages
  INCLUDE += -I$(include-path-petsc) -I$(include-path-petsc-bmake)\
             $(MPI_INCLUDE)
endif
ifeq ($(USE_CONTRIB_METIS),yes)
  INCLUDE += -I$(include-path-metis)
endif


# compiler flags for debug and optimized mode
CXXFLAGS.g   = @DEFS@ @CXXFLAGSG@  $(INCLUDE)
CXXFLAGS.o   = @DEFS@ @CXXFLAGSO@  $(INCLUDE)

F77FLAGS.g   = @DEFS@ @F77FLAGSG@  $(INCLUDE)
F77FLAGS.o   = @DEFS@ @F77FLAGSO@  $(INCLUDE)

ifeq ($(enable-shared),yes)
  CXXFLAGS.g += @CXXFLAGSPIC@
  CXXFLAGS.o += @CXXFLAGSPIC@

  F77FLAGS.g += @F77FLAGSPIC@
  F77FLAGS.o += @F77FLAGSPIC@

  LDFLAGS    += @LDFLAGSPIC@
endif


# PETSc wants to see a whole lot of other flags being passed. ...
ifeq ($(USE_CONTRIB_PETSC),yes)
  include $(DEAL_II_PETSC_DIR)/bmake/$(DEAL_II_PETSC_ARCH)/variables
  CXXFLAGS.g += $(GCXX_PETSCFLAGS)
  CXXFLAGS.o += $(OCXX_PETSCFLAGS)
endif


# compile flags for C compiler
CFLAGS = @CFLAGS@
