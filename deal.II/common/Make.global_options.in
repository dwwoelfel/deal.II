# $Id$

###############################################################################
## Please note:
##   The ./configure script generates Make.global_options from 
##   Make.global_options.in, so if you want to change something,
##   then do it in the latter file and re-run ./configure in the
##   top level directory
##
##
##   This file exports several variables. They are documented in 
##   the file  doc/development/makefiles.html. If you add a new
##   variable, make sure it is documented in 
##   doc/development/makefiles.1.html and listed in 
##   doc/development/Makefile.
###############################################################################



######################################################
# the following lines will be replaced by the output 
# of ./configure

D                    = @prefix@
CXX                  = @CXX@
GXX-VERSION          = @GXX_VERSION@
GXX-VERSION-DETAILED = @GXX_VERSION_DETAILED@
CC                   = @CC@
CC-VERSION           = @CC_VERSION@
SHLIBLD              = @SHLIBLD@
SHLIBFLAGS           = @SHLIBFLAGS@
AR                   = @AR@
RANLIB               = @RANLIB@
LDFLAGS              = @LDFLAGS@
F77                  = @F77@
F77-VERSION          = @F77_VERSION@
F77LIBS              = @F77LIBS@
LIBS                 = @LIBS@
LIBDIR               = $D/lib
PERL                 = @PERL@
enable-multithreading= @enablemultithreading@
with-multithreading  = @withmultithreading@
enable-shared        = @enableshared@
enable-parser        = @enableparser@
DEAL_II_VERSION      = @PACKAGE_VERSION@
DEAL_II_MAJOR        = @DEAL_II_MAJOR@
DEAL_II_MINOR        = @DEAL_II_MINOR@

USE_CONTRIB_PETSC    = @USE_CONTRIB_PETSC@
DEAL_II_PETSC_DIR    = @DEAL_II_PETSC_DIR@
DEAL_II_PETSC_ARCH   = @DEAL_II_PETSC_ARCH@
DEAL_II_PETSC_VERSION_MAJOR    = @DEAL_II_PETSC_VERSION_MAJOR@
DEAL_II_PETSC_VERSION_MINOR    = @DEAL_II_PETSC_VERSION_MINOR@
DEAL_II_PETSC_VERSION_SUBMINOR = @DEAL_II_PETSC_VERSION_SUBMINOR@
DEAL_II_PETSC_MPIUNI_LIB = @DEAL_II_PETSC_MPIUNI_LIB@

USE_CONTRIB_TRILINOS = @USE_CONTRIB_TRILINOS@
DEAL_II_TRILINOS_INCDIR = @DEAL_II_TRILINOS_INCDIR@
DEAL_II_TRILINOS_LIBDIR = @DEAL_II_TRILINOS_LIBDIR@
DEAL_II_TRILINOS_SHARED = @DEAL_II_TRILINOS_SHARED@
DEAL_II_TRILINOS_STATIC = @DEAL_II_TRILINOS_STATIC@

USE_CONTRIB_METIS    = @USE_CONTRIB_METIS@
DEAL_II_METIS_INCDIR    = @DEAL_II_METIS_INCDIR@
DEAL_II_METIS_LIBDIR    = @DEAL_II_METIS_LIBDIR@

USE_CONTRIB_HSL      = @USE_CONTRIB_HSL@
USE_CONTRIB_UMFPACK  = @USE_CONTRIB_UMFPACK@

TARGET               = @target@

######################################################
# now configuration for compiler flags, paths, etc

# path for libraries 

LIBPATH    += $(addprefix -L,$(LIBDIR))

static-lib-suffix = @static_lib_suffix@
shared-lib-suffix = @shared_lib_suffix@

ifeq ($(enable-shared),yes)
   lib-suffix = $(shared-lib-suffix)
else
   lib-suffix = $(static-lib-suffix)
endif

# add search path for libraries to make dependencies
vpath %@static_lib_suffix@ $(LIBDIR)
vpath %@shared_lib_suffix@ $(LIBDIR)

OBJEXT     = @OBJEXT@
EXEEXT     = @EXEEXT@

lib-base.o     = $(LIBDIR)/libbase$(lib-suffix)
lib-base.g     = $(LIBDIR)/libbase.g$(lib-suffix)

lib-lac.o      = $(LIBDIR)/liblac$(lib-suffix)
lib-lac.g      = $(LIBDIR)/liblac.g$(lib-suffix)

ifeq ($(USE_CONTRIB_HSL),yes)
  lib-lac.o += $(LIBDIR)/libhsl$(lib-suffix) 
  lib-lac.g += $(LIBDIR)/libhsl$(lib-suffix) 
endif

lib-deal2-1d.o = $(LIBDIR)/libdeal_II_1d$(lib-suffix)
lib-deal2-2d.o = $(LIBDIR)/libdeal_II_2d$(lib-suffix)
lib-deal2-3d.o = $(LIBDIR)/libdeal_II_3d$(lib-suffix)

lib-deal2-1d.g = $(LIBDIR)/libdeal_II_1d.g$(lib-suffix)
lib-deal2-2d.g = $(LIBDIR)/libdeal_II_2d.g$(lib-suffix)
lib-deal2-3d.g = $(LIBDIR)/libdeal_II_3d.g$(lib-suffix)

# dealing with shared libraries
DEAL_II_SHLIB_NAME = lib$(1)$(shared-lib-suffix).$(DEAL_II_VERSION)

ifeq (@DEAL_II_LD_UNDERSTANDS_SONAME@,yes)
  DEAL_II_ADD_SONAME = -Wl,-soname,$(call DEAL_II_SHLIB_NAME,$(1))
else
  ifeq (@DEAL_II_LD_UNDERSTANDS_SONAME@,yes)
    DEAL_II_ADD_SONAME = -Wl,-dylib_install_name -Wl,$(call DEAL_II_SHLIB_NAME,$(1))
  else
    DEAL_II_ADD_SONAME = 
  endif
endif

# since the PETSc libs are called the same for both debug and
# optimized mode, we have to have a trick to let the executable
# know which ones are the right (since apparently LD_LIBRARY_PATH
# can't do the trick unless you want to reset it every time
# you switch from debug to optimized mode). To avoid messing with
# -Wl,-rpath in our linker flags, we create one convenience library
# for all PETSc libraries in our own lib directory, and have this one
# twiddle with whatever is necessary to link in PETSc.
#
# to make things more fun, the whole scheme was changed in petsc 2.3.0
#
# also sort of annoying is the fact that on Mac OS X, the trick with the
# one library doesn't appear to work. Instead of a single library, we therefore
# have to list all of them, at least if we are using shared libs.
ifeq ($(DEAL_II_PETSC_VERSION_MINOR),2)
  lib-contrib-petsc-path.g = $(DEAL_II_PETSC_DIR)/lib/libg_c++/$(DEAL_II_PETSC_ARCH)
  lib-contrib-petsc-path.o = $(DEAL_II_PETSC_DIR)/lib/libO_c++/$(DEAL_II_PETSC_ARCH)
else
  lib-contrib-petsc-path.g = $(DEAL_II_PETSC_DIR)/lib/$(DEAL_II_PETSC_ARCH)
  lib-contrib-petsc-path.o = $(DEAL_II_PETSC_DIR)/lib/$(DEAL_II_PETSC_ARCH)
endif
ifeq ($(findstring darwin,$(TARGET)),)
  lib-contrib-petsc.g = $(LIBDIR)/libpetscall.g$(lib-suffix)
  lib-contrib-petsc.o = $(LIBDIR)/libpetscall$(lib-suffix)
else
  ifeq ($(enable-shared),yes)
    lib-contrib-petsc.g = $(shell echo $(DEAL_II_PETSC_DIR)/lib/$(DEAL_II_PETSC_ARCH)/*$(lib-suffix))
    lib-contrib-petsc.o = $(shell echo $(DEAL_II_PETSC_DIR)/lib/$(DEAL_II_PETSC_ARCH)/*$(lib-suffix))
  else
    lib-contrib-petsc.g = $(LIBDIR)/libpetscall.g$(lib-suffix)
    lib-contrib-petsc.o = $(LIBDIR)/libpetscall$(lib-suffix)
  endif
endif  


# same for metis, except that there is only one library in that case
lib-contrib-metis = $(DEAL_II_METIS_LIBDIR)/libmetis.a


# if PETSC is used, we need to add a number of libraries to what
# we link for LAC
ifeq ($(USE_CONTRIB_PETSC),yes)
  lib-lac.g += $(lib-contrib-petsc.g)
  lib-lac.o += $(lib-contrib-petsc.o)
  LIBS += $(DEAL_II_PETSC_MPIUNI_LIB)
endif


# If METIS was detected, add it to the lac libs, since this is where we call
# them
ifeq ($(USE_CONTRIB_METIS),yes)
  lib-lac.g += $(lib-contrib-metis)
  lib-lac.o += $(lib-contrib-metis)
endif


# include paths. do not take into account a possibly existing
# environment variable, since the compiler will evaluate the value of
# that anyway at compile time

include-path-petsc           = $(DEAL_II_PETSC_DIR)/include
include-path-petsc-bmake     = $(DEAL_II_PETSC_DIR)/bmake/$(DEAL_II_PETSC_ARCH)
include-path-trilinos        = $(DEAL_II_TRILINOS_INCDIR)
include-path-metis           = $(DEAL_II_METIS_INCDIR)

# include paths as command line flags. while compilers allow a space between
# the '-I' and the actual path, we also send these flags to the 
# make_dependencies program that doesn't support the extra space.
INCLUDE = -I$D/base/include -I$D/lac/include -I$D/deal.II/include \
	  @CPPFLAGS@ @TECPLOT_INCLUDE_DIR@ \
          @UMFPACK_INCLUDE_DIR@ @HSL_INCLUDE_DIR@ \
	  -I$D/contrib

# add PETSc, Trilinos and METIS include path if necessary. this rule
# (and the one further down below to get correct flags) should eventually
# be replaced by something where we do not blindly include PETSc make files
# (and thus import all of its variables), but rather set up a scheme to
# extract these values upon configuration
#
# note also that this only works for PETSc before 2.3 :-]
ifeq ($(USE_CONTRIB_PETSC),yes)
  ifeq ($(DEAL_II_PETSC_VERSION_MINOR),2)
    include $(DEAL_II_PETSC_DIR)/bmake/$(DEAL_II_PETSC_ARCH)/packages
  endif
  INCLUDE += -I$(include-path-petsc) -I$(include-path-petsc-bmake)\
             $(MPI_INCLUDE)
endif

ifeq ($(USE_CONTRIB_TRILINOS),yes)
  INCLUDE += -I$(include-path-trilinos)

  DEAL_II_TRILINOS_LIBS = amesos \
                aztecoo \
		belos \
		epetra \
		epetraext \
		ifpack \
		ml \
		rtop \
		sacado \
		stratimikos \
		stratimikosamesos \
		stratimikosaztecoo \
		stratimikosifpack \
		stratimikosml \
		teuchos \
		thyra \
		thyraepetra \
		thyraepetraext \
		triutils 

  ifeq ($(enable-shared),yes)
    lib-contrib-trilinos = \
       $(addsuffix $(shared-lib-suffix), $(addprefix $(DEAL_II_TRILINOS_LIBDIR)/lib, \
                                                     $(DEAL_II_TRILINOS_LIBS)))
  else
    lib-contrib-trilinos = \
       $(addsuffix $(static-lib-suffix), $(addprefix $(DEAL_II_TRILINOS_LIBDIR)/lib, \
                                                     $(DEAL_II_TRILINOS_LIBS)))
  endif

  LDFLAGS += $(lib-contrib-trilinos)
endif

ifeq ($(USE_CONTRIB_METIS),yes)
  INCLUDE += -I$(include-path-metis)
endif


# compiler flags for debug and optimized mode
CXXFLAGS.g   = @DEFS@ @CXXFLAGSG@  $(INCLUDE)
CXXFLAGS.o   = @DEFS@ @CXXFLAGSO@  $(INCLUDE)

F77FLAGS.g   = @DEFS@ @F77FLAGSG@  $(INCLUDE)
F77FLAGS.o   = @DEFS@ @F77FLAGSO@  $(INCLUDE)

# compile flags for C compiler
CFLAGS = @CFLAGS@

# PETSc wants to see a whole lot of other flags being passed...
ifeq ($(USE_CONTRIB_PETSC),yes)
  # set PETSC_DIR and PETSC_ARCH to be used in variables file
  PETSC_DIR  = $(DEAL_II_PETSC_DIR)
  PETSC_ARCH = $(DEAL_II_PETSC_ARCH)
  ifeq ($(DEAL_II_PETSC_VERSION_MINOR),2)
    include $(DEAL_II_PETSC_DIR)/bmake/$(DEAL_II_PETSC_ARCH)/variables
  else
    include $(DEAL_II_PETSC_DIR)/bmake/common/variables
  endif
  CXXFLAGS.g += $(GCXX_PETSCFLAGS)
  CXXFLAGS.o += $(OCXX_PETSCFLAGS)
endif


