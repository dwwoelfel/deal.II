# $Id$

###############################################################################
## Please note:
##   The ./configure script generates Make.global_options from 
##   Make.global_options.in, so if you want to change something,
##   then do it in the latter file and re-run ./configure in the
##   top level directory
##
##
##   This file exports several variables. They are documented in 
##   the file  doc/development/makefiles.html.
###############################################################################



######################################################
# the following lines will be replaced by the output 
# of ./configure

D                    = @DEAL2_DIR@
CC                   = @CC@
CXX                  = @CXX@
GXX-VERSION          = @GXX_VERSION@
OS                   = @OS@
PERL                 = @PERL@
enable-multithreading= @enablemultithreading@
with-multithreading  = @withmultithreading@
enable-shared        = @enableshared@


######################################################
# now configuration for compiler flags, pathes, etc

# path for libraries 

lib-path-base  = $D/base/lib
lib-path-lac   = $D/lac/lib
lib-path-deal2 = $D/deal.II/lib

LIBPATH       += $(addprefix -L,$(lib-path-base) $(lib-path-lac) $(lib-path-deal2))


# add search path for libraries for make dependencies

vpath %.a $(lib-path-base)
vpath %.a $(lib-path-lac)
vpath %.a $(lib-path-deal2)

ifeq ($(enable-shared),yes)
  lib-suffix = .so
else
  lib-suffix = .a
endif


lib-base.o     = $(lib-path-base)/libbase$(lib-suffix)
lib-base.g     = $(lib-path-base)/libbase.g$(lib-suffix)

lib-lac.o      = $(lib-path-lac)/liblac$(lib-suffix)
lib-lac.g      = $(lib-path-lac)/liblac.g$(lib-suffix)

lib-deal2-1d.o = $(lib-path-deal2)/libdeal_II_1d$(lib-suffix)
lib-deal2-2d.o = $(lib-path-deal2)/libdeal_II_2d$(lib-suffix)
lib-deal2-3d.o = $(lib-path-deal2)/libdeal_II_3d$(lib-suffix)

lib-deal2-1d.g = $(lib-path-deal2)/libdeal_II_1d.g$(lib-suffix)
lib-deal2-2d.g = $(lib-path-deal2)/libdeal_II_2d.g$(lib-suffix)
lib-deal2-3d.g = $(lib-path-deal2)/libdeal_II_3d.g$(lib-suffix)


# include paths. add library paths to existing variable

include-path-base  = $D/base/include
include-path-lac   = $D/lac/include
include-path-deal2 = $D/deal.II/include
INCLUDE           += $(addprefix -I, $(include-path-base) \
                                     $(include-path-lac)  \
                                     $(include-path-deal2))

# compiler flags for debug and optimized mode

CXXFLAGS.g   = -DDEBUG -ggdb -Wall -W -Wconversion \
               -Winline -Woverloaded-virtual\
	       -ftemplate-depth-32\
               $(INCLUDE) \
	       $(LIBPATH)
CXXFLAGS.o   = -O2 -Wuninitialized \
               -felide-constructors -fnonnull-objects \
	       -ftemplate-depth-32 \
               $(INCLUDE) \
	       $(LIBPATH)


# if not egcs-1.1 we can use additional flags for which that compiler
# had quirks
ifneq ($(GXX-VERSION),egcs1.1)
  CXXFLAGS.o += -funroll-loops -funroll-all-loops
endif


# if not on Linux and we use egcs-1.1: enable -fno-vtable-thunks,
# since vtable-thunks are broken and yield incorrect code. in fact,
# they are also broken on Linux, but we can't link programs compiled
# with -fno-vtable-thunks unless the whole compiler is recompiled,
# which we don't want to force on the users
ifneq ($(OS),Linux)
  ifeq ($(GXX-VERSION),egcs1.1)
    CXXFLAGS.g += -fno-vtable-thunks 
    CXXFLAGS.o += -fno-vtable-thunks 
  endif
endif



# after egcs1.1, the optimization flag -fstrict-aliasing was
# introduced, which enables better optimizations for well-written C++
# code. we believe that deal.II falls into that category and thusly
# enable the flag
ifneq ($(GXX-Version),egcs1.1)
  CXXFLAGS.o += -fstrict-aliasing
endif



# if --enable-multithreading was given, then set the compiler flags
# accordingly. note that this only sets the flags to generate programs
# which use thread-safe allocation functions, include the right files,
# etc, but the library won't use its multithread code. for this you
# have to specify another flag.
ifeq ($(enable-multithreading),yes)
  CXXFLAGS.g += -threads -D__USE_MALLOC
  CXXFLAGS.o += -threads -D__USE_MALLOC
endif


# if multithread support in the library is requested, then set the
# respective flags
ifneq ($(with-multithreading),no)
  ACE_ROOT    = $(with-multithreading)
  INCLUDE    += -I$(ACE_ROOT)
  LIBPATH    += -L$(ACE_ROOT)/ace

  lib-ACE     = $(ACE_ROOT)/ace/libACE.so

  CXXFLAGS.g += -DDEAL_II_USE_MT
  CXXFLAGS.o += -DDEAL_II_USE_MT

  vpath %.a $(ACE_ROOT)
endif


ifeq ($(enable-shared),yes)
  CXXFLAGS.g += -fPIC
  CXXFLAGS.o += -fPIC
endif
