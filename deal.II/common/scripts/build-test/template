#!/bin/bash
######################################################################
# Template: $Id$
# Config: @Id@
######################################################################
# Template for an automatic build test of the deal.II library
######################################################################
# cvs login must have been executed before calling this script!
######################################################################
# Please, register tests by writing to info@dealii.org in advance.
#
# Copyright: Wolfgang Bangerth, Guido Kanschat 2002
######################################################################

######################################################################
# Configuration variables (modified by the configuration script)
######################################################################

# Your deal CVS access. Replace 'deal' by your name if necessary.

export CVSROOT=:pserver:deal@eris:/home/people/cvs/deal

# System name is detected automatically. Only change in case of trouble

sysname=`./config.guess`

# Compiler tag for output. Please ask if you are not sure

compiler=gcc295

# Options for configure

options=''

# Name of the target directory (must be unique if you run several
# tests on the same computer). Change the value below if you use the
# same compiler with different configure options

target="${sysname}+${compiler}"

######################################################################
# Additional path configuration if compiler is in a strange place
# Modify if needed
######################################################################

# Name of the C++ compiler

export CXX=g++

# Name of the C compiler

export CC=gcc

# Additional command names

CVS=cvs
MAKE=make

# Make sure the right compiler, linker and libraries are found first

#export PATH:$PATH
#export LD_LIBRARY_PATH:$LD_LIBRARY_PATH

######################################################################
# Mail program setup:
#  $MAIL may be any command that takes an email address as parameter
#  and sends a message from STDIN to this address.
######################################################################
MAIL='mail'

######################################################################
# End of manual configuration
# Don't modify below
######################################################################
######################################################################
######################################################################

if test -d $target ; then rm -rf $target ; fi
mkdir $target 2>&1
cd $target
$CVS checkout deal.II 2>&1
cd deal.II

# Echo system information for later parsing

echo "CONFIG " $sysname $compiler $options | tee -a log

echo "RUNNING CONFIGURE AT " `date '+%Y-%m-%d %T'` | tee -a log
(./configure $options 2>&1) | tee -a log

echo "BUILDING LIBRARY AT " `date '+%Y-%m-%d %T'` | tee -a log

# now build the library. either write "succeeded" or "failed"
# into the file "result", and append all the output into "log"

(if ($MAKE all -k 2>&1) ; then
	echo "CLEANING OBJECT FILES AT " `date '+%Y-%m-%d %T'` | tee -a log
	$MAKE clean -k 2>&1
	echo "BUILDING EXAMPLES AT " `date '+%Y-%m-%d %T'` | tee -a log
        if (cd examples ; $MAKE -k 2>&1) ; then
		result=succeeded ;
	else
		result=failed ;
	fi
else
	result=failed ;
fi ; echo $result > result ) | tee -a log 

echo "CHECKING RESULTS AT " `date '+%Y-%m-%d %T'` | tee -a log

# Now send the result to the mailing address for success and failure,
# respectively. If the build succeded, remove traces.  Remark: we
# don't remove the results on failure, since some cron jobs do not
# send email on failure.

if test "`cat result`" = "failed" ; then
    $MAIL build-failure@dealii.org < log 2>&1
else
    $MAIL build-success@dealii.org < log 2>&1
    cd ../../
    rm -rf $target
fi

