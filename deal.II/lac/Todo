=================================================================
====== Things to be done for the lac library     ================
=================================================================

Let all the reinit functions in /lac free their memory, if reinit
  is called with the given dimension is zero. If so, check all deal.II files
  for use of reinit. (At present, new dimension==0 is not allowed.)
  [Done for dFMatrix and dVector; still to be done for the other
  classes.]

Use unsigned integers for the colnums array in dSMatrixStruct. This
  would enhance safety since colnum=-1 would no longer point to a
  valid address. How do you mark non-used columns? (gk)


Let dSMatrixStruct::compress free the memory of colnums which is
  no longer needed.


Make ILU decomposition faster by following the comment in the
  innermost loop (about the better use of the index j).

Change in-class defined SolverSelector functions out-of-class to
  conform to general style guide. (Ralf?)

Eliminate #vec_len# from the SparseMatrixStruct class. This should
  be rather simple since as far as I can see it is only used once
  (at all other places, it is only written) and also its value
  should be equal to rowstart[row].

Why not replace Vector::scale by Vector::operator *= ?

Use the commented-out version in PreconditionBlock::invert_diagblocks
  using the try-catch clauses


Comment on the modification of the right hand side in the Vanka
  smoother (which is done to yield a homogeneous boundary value
  problem on each patch)
  

Someone should take a look at the handling of the sparsity variable
  in the sparse matrix: it is subscribed to twice (explicitely and 
  through the subscriptor); the explicit subscription is redundant,
  but I don't have the time to look into that now.

Document long rows in sparse matrix (GK).
