<h1>Results</h1>

Since this example solves the same problem as @ref step_5 "step-5", we
refer to the graphical output there. The only difference between the two is 
the solver and the implementation of the matrix-vector products. 

When we run this program in 2D for quadratic elements, we get the following 
output:
@code
Cycle 0
Number of degrees of freedom: 337
System matrix memory consumption: 0.02573 MBytes.
Multigrid objects memory consumption: 0.05083 MBytes.
Convergence in 10 CG iterations.

Cycle 1
Number of degrees of freedom: 1313
System matrix memory consumption: 0.09254 MBytes.
Multigrid objects memory consumption: 0.1794 MBytes.
Convergence in 10 CG iterations.

Cycle 2
Number of degrees of freedom: 5185
System matrix memory consumption: 0.3552 MBytes.
Multigrid objects memory consumption: 0.6777 MBytes.
Convergence in 10 CG iterations.

Cycle 3
Number of degrees of freedom: 20609
System matrix memory consumption: 1.397 MBytes.
Multigrid objects memory consumption: 2.644 MBytes.
Convergence in 10 CG iterations.

Cycle 4
Number of degrees of freedom: 82177
System matrix memory consumption: 5.544 MBytes.
Multigrid objects memory consumption: 10.46 MBytes.
Convergence in 10 CG iterations.

Cycle 5
Number of degrees of freedom: 328193
System matrix memory consumption: 22.1 MBytes.
Multigrid objects memory consumption: 41.64 MBytes.
Convergence in 10 CG iterations.
@endcode

As in step-16, we see that the number of CG iterations remains constant with
increasing number of degrees of freedom. Not much changes if we run the
program in three spatial dimensions:

@code
Cycle 0
Number of degrees of freedom: 517
System matrix memory consumption: 0.1001 MBytes.
Multigrid objects memory consumption: 0.1463 MBytes.
Convergence in 9 CG iterations.

Cycle 1
Number of degrees of freedom: 3817
System matrix memory consumption: 0.6613 MBytes.
Multigrid objects memory consumption: 0.8896 MBytes.
Convergence in 10 CG iterations.

Cycle 2
Number of degrees of freedom: 29521
System matrix memory consumption: 5.099 MBytes.
Multigrid objects memory consumption: 6.653 MBytes.
Convergence in 10 CG iterations.

Cycle 3
Number of degrees of freedom: 232609
System matrix memory consumption: 40.4 MBytes.
Multigrid objects memory consumption: 52.24 MBytes.
Convergence in 11 CG iterations.

Cycle 4
Number of degrees of freedom: 1847617
System matrix memory consumption: 322 MBytes.
Multigrid objects memory consumption: 415.1 MBytes.
@endcode

A comparison of the memory consumption of the MatrixFree class with a 
standard SparseMatrix object shows that, for the largest problem considered
in 3D, the memory consumption for SparseMatrix and its sparsity pattern 
would be about 1.3 GBytes, which is a factor of 4 more memory. If combined
with cubic elements in 3D, the MatrixFree class would decrease memory 
consumption even by a factor of 12.
