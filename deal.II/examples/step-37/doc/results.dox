<h1>Results</h1>

Since this example solves the same problem as @ref step_5 "step-5", we
refer to the graphical output there. The only difference between the two is 
the solver and the implementation of the matrix-vector products. 

The output produced by this program is the following:
@code
Cycle 0
Number of degrees of freedom: 337
System matrix memory consumption: 0.02781 MBytes.
Multigrid objects memory consumption: 0.04799 MBytes.
Convergence in 8 CG iterations.

Cycle 1
Number of degrees of freedom: 1313
System matrix memory consumption: 0.103 MBytes.
Multigrid objects memory consumption: 0.171 MBytes.
Convergence in 9 CG iterations.

Cycle 2
Number of degrees of freedom: 5185
System matrix memory consumption: 0.4019 MBytes.
Multigrid objects memory consumption: 0.6524 MBytes.
Convergence in 9 CG iterations.

Cycle 3
Number of degrees of freedom: 20609
System matrix memory consumption: 1.594 MBytes.
Multigrid objects memory consumption: 2.562 MBytes.
Convergence in 9 CG iterations.

Cycle 4
Number of degrees of freedom: 82177
System matrix memory consumption: 6.357 MBytes.
Multigrid objects memory consumption: 10.18 MBytes.
Convergence in 9 CG iterations.

Cycle 5
Number of degrees of freedom: 328193
System matrix memory consumption: 25.39 MBytes.
Multigrid objects memory consumption: 40.58 MBytes.
Convergence in 9 CG iterations.
@endcode

As in step-16, we see that the number of CG iterations stays constant with 
increasing number of degrees of freedom.