%!PS-Adobe-2.0 EPSF-2.0
%%Title: x.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Tue Apr 30 18:22:25 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 266 201
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
742 280 M
63 0 V
3277 0 R
-63 0 V
 stroke
658 280 M
[ [(Helvetica) 140.0 0.0 true true (0.0001)]
] -46.7 MRshow
742 453 M
31 0 V
3309 0 R
-31 0 V
742 682 M
31 0 V
3309 0 R
-31 0 V
742 800 M
31 0 V
3309 0 R
-31 0 V
742 855 M
63 0 V
3277 0 R
-63 0 V
 stroke
658 855 M
[ [(Helvetica) 140.0 0.0 true true (0.001)]
] -46.7 MRshow
742 1029 M
31 0 V
3309 0 R
-31 0 V
742 1258 M
31 0 V
3309 0 R
-31 0 V
742 1375 M
31 0 V
3309 0 R
-31 0 V
742 1431 M
63 0 V
3277 0 R
-63 0 V
 stroke
658 1431 M
[ [(Helvetica) 140.0 0.0 true true (0.01)]
] -46.7 MRshow
742 1604 M
31 0 V
3309 0 R
-31 0 V
742 1833 M
31 0 V
3309 0 R
-31 0 V
742 1950 M
31 0 V
3309 0 R
-31 0 V
742 2006 M
63 0 V
3277 0 R
-63 0 V
 stroke
658 2006 M
[ [(Helvetica) 140.0 0.0 true true (0.1)]
] -46.7 MRshow
742 2179 M
31 0 V
3309 0 R
-31 0 V
742 2408 M
31 0 V
3309 0 R
-31 0 V
742 2526 M
31 0 V
3309 0 R
-31 0 V
742 2581 M
63 0 V
3277 0 R
-63 0 V
 stroke
658 2581 M
[ [(Helvetica) 140.0 0.0 true true (1)]
] -46.7 MRshow
742 2755 M
31 0 V
3309 0 R
-31 0 V
742 280 M
0 63 V
0 2513 R
0 -63 V
 stroke
742 140 M
[ [(Helvetica) 140.0 0.0 true true (10)]
] -46.7 MCshow
993 280 M
0 31 V
0 2545 R
0 -31 V
1140 280 M
0 31 V
0 2545 R
0 -31 V
1245 280 M
0 31 V
0 2545 R
0 -31 V
1326 280 M
0 31 V
0 2545 R
0 -31 V
1392 280 M
0 31 V
0 2545 R
0 -31 V
1448 280 M
0 31 V
0 2545 R
0 -31 V
1496 280 M
0 31 V
0 2545 R
0 -31 V
1539 280 M
0 31 V
0 2545 R
0 -31 V
1577 280 M
0 63 V
0 2513 R
0 -63 V
 stroke
1577 140 M
[ [(Helvetica) 140.0 0.0 true true (100)]
] -46.7 MCshow
1828 280 M
0 31 V
0 2545 R
0 -31 V
1975 280 M
0 31 V
0 2545 R
0 -31 V
2080 280 M
0 31 V
0 2545 R
0 -31 V
2161 280 M
0 31 V
0 2545 R
0 -31 V
2227 280 M
0 31 V
0 2545 R
0 -31 V
2283 280 M
0 31 V
0 2545 R
0 -31 V
2331 280 M
0 31 V
0 2545 R
0 -31 V
2374 280 M
0 31 V
0 2545 R
0 -31 V
2412 280 M
0 63 V
0 2513 R
0 -63 V
 stroke
2412 140 M
[ [(Helvetica) 140.0 0.0 true true (1000)]
] -46.7 MCshow
2663 280 M
0 31 V
0 2545 R
0 -31 V
2810 280 M
0 31 V
0 2545 R
0 -31 V
2915 280 M
0 31 V
0 2545 R
0 -31 V
2996 280 M
0 31 V
0 2545 R
0 -31 V
3062 280 M
0 31 V
0 2545 R
0 -31 V
3118 280 M
0 31 V
0 2545 R
0 -31 V
3166 280 M
0 31 V
0 2545 R
0 -31 V
3209 280 M
0 31 V
0 2545 R
0 -31 V
3247 280 M
0 63 V
0 2513 R
0 -63 V
 stroke
3247 140 M
[ [(Helvetica) 140.0 0.0 true true (10000)]
] -46.7 MCshow
3498 280 M
0 31 V
0 2545 R
0 -31 V
3645 280 M
0 31 V
0 2545 R
0 -31 V
3750 280 M
0 31 V
0 2545 R
0 -31 V
3831 280 M
0 31 V
0 2545 R
0 -31 V
3897 280 M
0 31 V
0 2545 R
0 -31 V
3953 280 M
0 31 V
0 2545 R
0 -31 V
4001 280 M
0 31 V
0 2545 R
0 -31 V
4044 280 M
0 31 V
0 2545 R
0 -31 V
4082 280 M
0 63 V
0 2513 R
0 -63 V
 stroke
4082 140 M
[ [(Helvetica) 140.0 0.0 true true (100000)]
] -46.7 MCshow
1.000 UL
LTb
742 280 M
3340 0 V
0 2576 V
-3340 0 V
742 280 L
1.000 UP
1.000 UL
LT0
3431 2723 M
[ [(Helvetica) 140.0 0.0 true true (Global refinement)]
] -46.7 MRshow
3515 2723 M
399 0 V
1074 2064 M
427 -39 V
461 45 V
481 -391 V
492 -349 V
3432 983 L
3932 636 L
1074 2064 Pls
1501 2025 Pls
1962 2070 Pls
2443 1679 Pls
2935 1330 Pls
3432 983 Pls
3932 636 Pls
3714 2723 Pls
1.000 UP
1.000 UL
LT1
3431 2583 M
[ [(Helvetica) 140.0 0.0 true true (Kelly indicator)]
] -46.7 MRshow
3515 2583 M
399 0 V
1074 2064 M
252 476 V
255 -817 V
233 432 V
254 -175 V
249 -522 V
252 266 V
2806 754 L
253 580 V
3298 713 L
237 254 V
1074 2064 Crs
1326 2540 Crs
1581 1723 Crs
1814 2155 Crs
2068 1980 Crs
2317 1458 Crs
2569 1724 Crs
2806 754 Crs
3059 1334 Crs
3298 713 Crs
3535 967 Crs
3714 2583 Crs
1.000 UP
1.000 UL
LT2
3431 2443 M
[ [(Helvetica) 140.0 0.0 true true (Kelly with weight)]
] -46.7 MRshow
3515 2443 M
399 0 V
1074 2064 M
237 -250 V
232 290 V
257 -326 V
244 -337 V
258 3 V
251 -13 V
239 -210 V
239 -187 V
236 -37 V
3503 878 L
1074 2064 Star
1311 1814 Star
1543 2104 Star
1800 1778 Star
2044 1441 Star
2302 1444 Star
2553 1431 Star
2792 1221 Star
3031 1034 Star
3267 997 Star
3503 878 Star
3714 2443 Star
1.000 UP
1.000 UL
LT3
3431 2303 M
[ [(Helvetica) 140.0 0.0 true true (Dual weighted estimator)]
] -46.7 MRshow
3515 2303 M
399 0 V
1074 2064 M
180 56 V
106 -199 V
364 72 V
192 -153 V
272 -562 V
305 -91 V
311 -44 V
3125 958 L
3462 689 L
337 -20 V
1074 2064 Box
1254 2120 Box
1360 1921 Box
1724 1993 Box
1916 1840 Box
2188 1278 Box
2493 1187 Box
2804 1143 Box
3125 958 Box
3462 689 Box
3799 669 Box
3714 2303 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
