############################################################
# $Id$
# Copyright (C) 2000 by the deal.II authors
############################################################

############################################################
# Include general settings for including DEAL libraries
############################################################

D = @DEAL2_DIR@

include $D/common/Make.global_options


############################################################
# Set debug-mode as a default
############################################################

debug-mode = on


############################################################
# Define library names
############################################################

libs.g   = $(lib-deal2-2d.g) \
           $(lib-lac.g)      \
           $(lib-base.g)
libs     = $(lib-deal2-2d.o) \
           $(lib-lac.o)      \
           $(lib-base.o)


############################################################
# Select compiler flags according to debug-mode
############################################################

ifeq ($(debug-mode),on)
libraries = $(libs.g)
libdeal3d = $(lib-deal2-3d.g)
libdeal1d = $(lib-deal2-1d.g)
flags     = $(CXXFLAGS.g) $(CXXFLAGS)
endif

ifeq ($(debug-mode),off)
libraries = $(libs)
libdeal3d = $(lib-deal2-3d.o)
libdeal1d = $(lib-deal2-1d.o)
flags     = $(CXXFLAGS.o) $(CXXFLAGS)
endif


# If in multithread mode, add the ACE library to the libraries which
# we need to link with:
ifneq ($(with-multithreading),no)
  libraries += $(lib-ACE)
endif


%.go : %.cc Makefile
	@echo =====debug========= $<
	@$(CXX) $(flags) -c $< -o $@
%.o : %.cc Makefile
	@echo =====optimized===== $<
	@$(CXX) $(flags) -c $< -o $@


all: grid_test.check dof_test.check data_out.check \
     fe_tables.check gradients.check \
     constraints.check mg.check mglocal.check wave-test-3.check \
     block_matrices.check second_derivatives.check

exe: $(all:.check=.testcase) benchmark
run: $(all:.check=.output)
############################################################
# Typical block for building a running program
#
# 1. provide a list of source files in ...-cc-files
#
# 2. generate the list of object files according to debug-mode
#
# 3. make executable
#
# 4. Explicit dependencies of object files (will be automatic soon)
#
############################################################

template-cc-files = template.cc 

ifeq ($(debug-mode),on)
template-o-files = $(template-cc-files:.cc=.go)
else
template-o-files = $(template-cc-files:.cc=.o)
endif

template.testcase: $(template-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################

constraints-cc-files = constraints.cc 

ifeq ($(debug-mode),on)
constraints-o-files = $(constraints-cc-files:.cc=.go)
else
constraints-o-files = $(constraints-cc-files:.cc=.o)
endif

constraints.testcase: $(constraints-o-files) $(libdeal3d) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################

dof_test-cc-files = dof_test.cc 

ifeq ($(debug-mode),on)
dof_test-o-files = $(dof_test-cc-files:.cc=.go)
else
dof_test-o-files = $(dof_test-cc-files:.cc=.o)
endif

dof_test.testcase: $(dof_test-o-files) $(libdeal3d) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################


data_out-cc-files = data_out.cc 

ifeq ($(debug-mode),on)
data_out-o-files = $(data_out-cc-files:.cc=.go)
else
data_out-o-files = $(data_out-cc-files:.cc=.o)
endif

data_out.testcase: $(data_out-o-files) $(libdeal3d) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(flags) -o $@ $^


############################################################

fe_tables-cc-files = fe_tables.cc 

ifeq ($(debug-mode),on)
fe_tables-o-files = $(fe_tables-cc-files:.cc=.go)
else
fe_tables-o-files = $(fe_tables-cc-files:.cc=.o)
endif

fe_tables.testcase: $(fe_tables-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################

gradients-cc-files = gradients.cc 

ifeq ($(debug-mode),on)
gradients-o-files = $(gradients-cc-files:.cc=.go)
else
gradients-o-files = $(gradients-cc-files:.cc=.o)
endif

gradients.testcase: $(gradients-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################

grid_test-cc-files = grid_test.cc 

ifeq ($(debug-mode),on)
grid_test-o-files = $(grid_test-cc-files:.cc=.go)
else
grid_test-o-files = $(grid_test-cc-files:.cc=.o)
endif

grid_test.testcase: $(grid_test-o-files) $(libdeal3d) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################

grid_generator-cc-files = grid_generator.cc 

ifeq ($(debug-mode),on)
grid_generator-o-files = $(grid_generator-cc-files:.cc=.go)
else
grid_generator-o-files = $(grid_generator-cc-files:.cc=.o)
endif

grid_generator.testcase: $(grid_generator-o-files) $(libdeal3d) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################

second_derivatives-cc-files = second_derivatives.cc 

ifeq ($(debug-mode),on)
second_derivatives-o-files = $(second_derivatives-cc-files:.cc=.go)
else
second_derivatives-o-files = $(second_derivatives-cc-files:.cc=.o)
endif

second_derivatives.testcase: $(second_derivatives-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################

wave-test-3-cc-files = wave-test-3.cc 

ifeq ($(debug-mode),on)
wave-test-3-o-files = $(wave-test-3-cc-files:.cc=.go)
else
wave-test-3-o-files = $(wave-test-3-cc-files:.cc=.o)
endif

wave-test-3.testcase: $(wave-test-3-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################


mglocal-cc-files = mglocal.cc

ifeq ($(debug-mode),on)
mglocal-o-files = $(mglocal-cc-files:.cc=.go)
else
mglocal-o-files = $(mglocal-cc-files:.cc=.o)
endif

mglocal.testcase: $(mglocal-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)



############################################################


mg-cc-files = mg.cc 

ifeq ($(debug-mode),on)
mg-o-files = $(mg-cc-files:.cc=.go)
else
mg-o-files = $(mg-cc-files:.cc=.o)
endif

mg.testcase: $(mg-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)



############################################################


block_matrices-cc-files = block_matrices.cc 

ifeq ($(debug-mode),on)
block_matrices-o-files = $(block_matrices-cc-files:.cc=.go)
else
block_matrices-o-files = $(block_matrices-cc-files:.cc=.o)
endif

block_matrices.testcase: $(block_matrices-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################


intergrid_map-cc-files = intergrid_map.cc 

ifeq ($(debug-mode),on)
intergrid_map-o-files = $(intergrid_map-cc-files:.cc=.go)
else
intergrid_map-o-files = $(intergrid_map-cc-files:.cc=.o)
endif

intergrid_map.testcase: $(intergrid_map-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS) $(lib-deal2-1d.g) $(lib-deal2-3d.g)


############################################################
# Continue with other targets if needed
############################################################


benchmark-cc-files = benchmark.cc

ifeq ($(debug-mode),on)
benchmark-o-files = $(benchmark-cc-files:.cc=.go)
else
benchmark-o-files = $(benchmark-cc-files:.cc=.o)
endif

benchmark.testcase: $(benchmark-o-files) $(libraries)
	$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)

############################################################
# Continue with other targets if needed
############################################################


target1-cc-files = t1.cc t2.cc t3.cc

ifeq ($(debug-mode),on)
target1-o-files = $(target1-cc-files:.cc=.go)
else
target1-o-files = $(target1-cc-files:.cc=.o)
endif

target1: $(target1-o-files) $(libraries)
	$(CXX) $(LDFLAGS) -g  -o $@ $^ $(LIBS)


############################################################
# Postprocessing
############################################################

wave-test-3.output: wave-test-3.testcase
	@echo =====Running======= $<
	@./$<
	@perl -pi -e 's/JobId.*//;          \
                      s/value.*//;          \
                      s/Creation Date.*//g; \
                      s/Time tag:.*//g;     \
                      s/(\.\d\d)\d*/\1/g;' $@

%.output:%.testcase
	@echo =====Running======= $<
	@./$<
	@perl -pi -e 's/JobId.*//;\
		s/value.*//;\
		s/%%Creation Date:.*//;\
		s/# Time =.*//; \
		s/^\s+Time =.*//;\
		s/^\s+Date =.*//;'  $@

%.check:%.output
	@-diff $< $(patsubst %.output,%.checked, $<) && echo '=====OK============' $<
	@touch $@
############################################################
# Cleanup targets
############################################################

clean:
	rm -f Make.depend *.o *.go *.output

veryclean: clean
	rm -f *.testcase *.inp *.gpl *.eps *.gnuplot

############################################################
# Automatic generation of dependencies
############################################################

all-cc-files = $(shell echo *.cc)

Make.depend: $(all-cc-files)
	@echo =====Dependencies== Make.depend
	@$(CXX) $(CXXFLAGS.g) $^ -M > $@
	@perl -pi -e 's/(^[^.]+)\.o:/\1.o \1.go:/;' $@

include Make.depend
