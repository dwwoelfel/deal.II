############################################################
# $Id$
# Copyright (C) 2000, 2001 by the deal.II authors
############################################################

############################################################
# Include general settings for including DEAL libraries
############################################################

D = @DEAL2_DIR@

include $D/common/Make.global_options

normalize = $D/common/scripts/normalize.pl

############################################################
# Set debug-mode as a default
############################################################

debug-mode = on


############################################################
# Define library names
############################################################

libs.g   = $(lib-deal2-1d.g) \
           $(lib-deal2-2d.g) \
           $(lib-deal2-3d.g) \
           $(lib-lac.g)      \
           $(lib-base.g)
libs     = $(lib-deal2-1d.o) \
           $(lib-deal2-2d.o) \
           $(lib-deal2-3d.o) \
           $(lib-lac.o)      \
           $(lib-base.o)


############################################################
# Select compiler flags according to debug-mode
############################################################

ifeq ($(debug-mode),on)
libraries = $(libs.g)
flags     = $(CXXFLAGS.g) $(CXXFLAGS)
endif

ifeq ($(debug-mode),off)
libraries = $(libs)
flags     = $(CXXFLAGS.o) $(CXXFLAGS)
endif

# If in multithread mode, add the ACE library to the libraries which
# we need to link with:
ifneq ($(with-multithreading),no)
  libraries += $(lib-ACE)
endif



%.go : %.cc Makefile
	@echo =====debug========= $<
	@$(CXX) $(flags) -c $< -o $@
%.o : %.cc Makefile
	@echo =====optimized===== $<
	@$(CXX) $(flags) -c $< -o $@


all: check

############################################################
# Typical block for building a running program
#
# 1. provide a list of source files in ...-cc-files
#
# 2. generate the list of object files according to debug-mode
#
# 3. make executable
#
# 4. Explicit dependencies of object files (will be automatic soon)
#
############################################################

fe_data_test-cc-files = fe_data_test.cc

ifeq ($(debug-mode),on)
fe_data_test-o-files = $(fe_data_test-cc-files:.cc=.go)
else
fe_data_test-o-files = $(fe_data_test-cc-files:.cc=.o)
endif

fe_data_test.testcase: $(fe_data_test-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(flags) -o $@ $^

############################################################

shapes-cc-files = shapes.cc

ifeq ($(debug-mode),on)
shapes-o-files = $(shapes-cc-files:.cc=.go)
else
shapes-o-files = $(shapes-cc-files:.cc=.o)
endif

shapes.testcase: $(shapes-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(flags) -o $@ $^

############################################################

derivatives-cc-files = derivatives.cc

ifeq ($(debug-mode),on)
derivatives-o-files = $(derivatives-cc-files:.cc=.go)
else
derivatives-o-files = $(derivatives-cc-files:.cc=.o)
endif

derivatives.testcase: $(derivatives-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(flags) -o $@ $^

############################################################

embedding-cc-files = embedding.cc

ifeq ($(debug-mode),on)
embedding-o-files = $(embedding-cc-files:.cc=.go)
else
embedding-o-files = $(embedding-cc-files:.cc=.o)
endif

embedding: $(embedding-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(flags) -o $@ $^

############################################################

interpolation-cc-files = interpolation.cc

ifeq ($(debug-mode),on)
interpolation-o-files = $(interpolation-cc-files:.cc=.go)
else
interpolation-o-files = $(interpolation-cc-files:.cc=.o)
endif

interpolation: $(interpolation-o-files) $(libraries)
	@$(CXX) $(flags) -o $@ $^

############################################################

mapping-cc-files = mapping.cc

ifeq ($(debug-mode),on)
mapping-o-files = $(mapping-cc-files:.cc=.go)
else
mapping-o-files = $(mapping-cc-files:.cc=.o)
endif

mapping.testcase: $(mapping-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(flags) -o $@ $^

############################################################

internals-cc-files = internals.cc

ifeq ($(debug-mode),on)
internals-o-files = $(internals-cc-files:.cc=.go)
else
internals-o-files = $(internals-cc-files:.cc=.o)
endif

internals: $(internals-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(flags) -o $@ $^

############################################################

performance-cc-files = performance.cc

ifeq ($(debug-mode),on)
performance-o-files = $(performance-cc-files:.cc=.go)
else
performance-o-files = $(performance-cc-files:.cc=.o)
endif

performance: $(performance-o-files) $(libraries)
	@echo =====linking======= $<
	@$(CXX) $(flags) -o $@ $^

############################################################
# Continue with other targets if needed
############################################################

check: fe_data_test.check mapping.check derivatives.check shapes.check
	@echo Checking results
	$(MAKE) dodiff

dat = $(wildcard *.output)
check = $(dat:.output=.check)

dodiff: $(check)

include ../Makefile.rules
include Makefile.depend

.PHONY: clean veryclean check
